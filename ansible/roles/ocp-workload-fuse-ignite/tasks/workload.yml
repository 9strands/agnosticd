---

- name: Create project for workload; project =  {{ocp_project}}
  shell: "oc new-project {{ocp_project}}"

- name: Make sure we go back do default project
  shell: "oc project default"

- name: Give ocp_username access to ocp_project; user = {{ocp_username}}
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{ocp_project}}"



# ######                 Fuse Ignite            ##########

- name: Create serviceaccount-as-oauthclient
  shell: "oc create -f {{syndesisio_sa_yml}} -n {{ocp_project}}"

- name: Create syndesisio template; {{syndesisio_template_yml}}
  shell: "oc create -f {{syndesisio_template_yml}} -n {{ocp_project}}"

- name: Create the syndesisio app
  shell: |
      oc new-app {{ignite_version}} \
      -p ROUTE_HOSTNAME=fuse.{{ocp_project}}.{{ocp_apps_domain}} \
      -p OPENSHIFT_MASTER=https://master.{{ocp_domain}} \
      -p OPENSHIFT_PROJECT={{ocp_project}} \
      -p POSTGRESQL_MEMORY_LIMIT={{POSTGRESQL_MEMORY_LIMIT}} \
      -p PROMETHEUS_MEMORY_LIMIT={{PROMETHEUS_MEMORY_LIMIT}} \
      -p META_MEMORY_LIMIT={{META_MEMORY_LIMIT}} \
      -p SERVER_MEMORY_LIMIT={{SERVER_MEMORY_LIMIT}} \
      -p OPENSHIFT_OAUTH_CLIENT_SECRET=$(oc sa get-token syndesis-oauth-client -n {{ocp_project}}) \
      -n {{ocp_project}}

- name: Create syndesis-amq template; {{syndesisio_amq_yml}}
  shell: "oc create -f {{syndesisio_amq_yml}} -n {{ocp_project}}"

- name: Create the syndesisio amq app
  shell: |
      oc new-app amq63-basic \
      -p APPLICATION_NAME=syndesis \
      -p MQ_USERNAME={{mq_username}} \
      -p MQ_PASSWORD={{mq_password}} \
      -n {{ocp_project}}

# ########################################################



# ######        Coolstore Catalog Service       ##########

- name: Add the view role to the default service account
  shell: "oc policy add-role-to-user view -z default -n {{ocp_project}}"

- name: Copy catalog service configmap to known path
  template:
    src: templates/app-config.yaml
    dest: /tmp/app-config.yaml
- name: Load catalog service configmap
  shell: "oc create configmap app-config --from-file=/tmp/app-config.yaml -n {{ocp_project}}" 


- name: Copy catalog service (with db) template to known path
  template:
    src: templates/coolstore-catalog-mongodb-persistent.yaml 
    dest: /tmp/coolstore-catalog-mongodb-persistent.yaml
- name: Build and create catalog service
  shell: |
      oc new-app \
      -f /tmp/coolstore-catalog-mongodb-persistent.yaml \
      -p CATALOG_DB_USERNAME=mongo \
      -p CATALOG_DB_PASSWORD=mongo \
      -n {{ocp_project}} 

- include: ./wait_for_build.yml
  static: no
  vars:
    build_to_wait:
      - catalog-service-s2i

- name: resume catalog-service
  shell: oc rollout resume dc/catalog-service -n {{ocp_project}}
- include: ./wait_for_deploy.yml
  static: no
  vars:
    pod_to_wait:
      - catalog-service

# ########################################################


- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
