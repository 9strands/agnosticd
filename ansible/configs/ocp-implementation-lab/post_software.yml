#vim: set ft=ansible:
---
- name: POST Software Playbook NONE
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "./env_vars.yml"
    - "./env_secret_vars.yml"
    - "./ssh_vars.yml"
  tasks:
    - debug:
        msg: "included software playbook for: none [dummy only]"

    - set_fact:
        DNS_action: "CREATE"

    - name: create file for internal dns names
      template:
        src: "../../configs/{{env_type}}/files/{{cloud_provider}}_internal_dns.json.j2"
        dest: "../../workdir/internal_dns-{{ env_type }}-{{ guid }}.json"
      tags:
        - internal_dns_creation


    - set_fact:
        DNS_action: "DELETE"

    - name: create Delete file for internal dns names
      template:
        src: "../../configs/{{env_type}}/files/{{cloud_provider}}_internal_dns.json.j2"
        dest: "../../workdir/internal_dns-{{ env_type }}-{{ guid }}_DELETE.json"
      tags:
        - internal_dns_creation
    - name: get internal dns zone id if not provided
      shell: "aws route53 list-hosted-zones-by-name --region=us-east-1 --dns-name=ocp-ocp-implementation-lab.ocptestx3.internal. --output text --query='HostedZones[*].Id' | awk -F'/' '{print $3}'"
      register: internal_zone_id_register

    - debug:
        var: internal_zone_id_register
    - name: Store internal route53 ID
      set_fact:
        internal_zone_id: "{{ internal_zone_id_register.stdout }}"
      when: 'internal_zone_id_register is defined'
    - name: create internal dns names
      shell: "aws route53 change-resource-record-sets --hosted-zone-id {{internal_zone_id}}  --change-batch file://../../workdir/internal_dns-{{ env_type }}-{{ guid }}.json --region={{aws_region}}"
      ignore_errors: true
      tags:
        - internal_dns_creation
      when: internal_zone_id is defined

    - name: generate ansible hosts file
      template:
        src: "../../configs/{{ env_type }}/files/hosts_template.j2"
        dest: "../../workdir/hosts-{{ env_type }}-{{ guid }}"

- name: Step 00xxxxx bastion preparation for deployment
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  gather_facts: False
  become: yes
  vars_files:
    - "./env_vars.yml"
    - "./env_secret_vars.yml"
    - "./ssh_vars.yml"
  tasks:
    - name: Copy over ansible hosts file
      copy:
        src: "../../workdir/hosts-{{ env_type }}-{{ guid }}"
        dest: /etc/ansible/hosts

# #########################Configuring openshfit-nodes
#
# - name: Configuring openshfit-nodes
#   hosts:
#     - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_infranode') | replace('-', '_') }}"
#     - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_node') | replace('-', '_') }}"
#     - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
#   become: yes
#   vars_files:
#     - "./env_vars.yml"
#     - "./ssh_vars.yml"
#   roles:
#     - "../../roles/openshift-node"
#   tags:
#     - openshift_node_tasks

#########################Configuring nfs hosts

- name: Configuring Nfs Host
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_nfs') | replace('-', '_') }}"
  become: yes
  vars_files:
    - "./env_vars.yml"
    - "./ssh_vars.yml"
  roles:
    -  { role: "../../roles/nfs", when: "{{ install_nfs }}" }
  tags:
    - nfs_tasks
