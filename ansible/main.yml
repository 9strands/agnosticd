#vim: set ft=ansible:
---
################################################################################
################################################################################
############ Step 000 Pre Infrastructure Deploy Tasks
################################################################################
################################################################################

- include: "{{ playbook_dir }}/configs/{{ env_type }}/pre_infra.yml"
  tags:
    - step000
    - pre_infra_tasks

#################################################################################
#################################################################################
############# Step 001 Deploy Infrastructure
#################################################################################
#################################################################################

- name: Step 001 Deploy Infrastructure
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - deloy_infrastructure
  tasks:
    - name: Deploy Infrastucture
      include: "{{ playbook_dir }}/cloud_providers/{{ cloud_provider }}_infrastructure_deployment.yml"
      tags:
        - infrastucture_deployment

    - name: Refresh cloud_provider cache
      local_action:
      command: "{{ playbook_dir }}/inventory/{{ cloud_provider }}.py --refresh-cache"
      tags:
        - refresh_inventory
        - refresh_inventory_script

    - name: Refresh in-memory cloud_provider cache
      meta: refresh_inventory
      tags:
        - refresh_inventory

#TODO: May still want to generate an SSH config for later use
    #
    # - name: Store bastion hostname as a fact
    #   set_fact:
    #     bastion_hostname: "{{ hostvars[ groups[ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') ].0 ]['ec2_public_dns_name'] }}"


- name: Readiness and SSH DNS disable
  hosts:
    - "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  gather_facts: False
  any_errors_fatal: True
  become: true
  tags:
    - step001
    - wait_ssh
  tasks:
    # - name: Store bastion hostname as a fact
    #   set_fact:
    #     bastion_hostname: "{{ hostvars[ groups[ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') ].0 ]['ec2_public_dns_name'] }}"
    - name: wait for host to be available
      wait_for:
        host: '{{ inventory_hostname }}'
        port: 22
        search_regex: OpenSSH

    - name: Disable SSH DNS lookup
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "#UseDNS yes"
        line: "UseDNS no"
      register: dns_config_changed

    - name: Restart SSHD as needed
      service:
        name: sshd
        state: restarted
      when: dns_config_changed | changed
#TODO: May still want to generate an SSH config for later use
    - name: Configure local .ssh/config for bastion proxy use
      gather_facts: False
      include: "{{playbook_dir}}/cloud_providers/{{cloud_provider}}_ssh_config_setup.yml"
      when: 'deploy_local_ssh_config is defined and deploy_local_ssh_config == "true"'

#################################################################################
#################################################################################
############# Step 002 Post Infrastructure Deploy Tasks
#################################################################################
#################################################################################
- include: "{{ playbook_dir }}/configs/{{ env_type }}/post_infra.yml"
  tags:
    - step002
    - post_infra_tasks

#################################################################################
#################################################################################
############## Step 003 Pre Software Deploy Tasks
#################################################################################
#################################################################################
- include: "{{ playbook_dir }}/configs/{{ env_type }}/pre_software.yml"
  tags:
    - step003
    - pre_software_tasks

##################################################################################
##################################################################################
############## Step 004 Software Deploy Tasks
##################################################################################
##################################################################################

- name: Step 004 Deploy Software - Create env key
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - deloy_infrastructure
  tasks:
    - openssl_privatekey:
        path: "{{ playbook_dir }}/workdir/{{env_authorized_key}}.pem"
        state: present

    - openssl_publickey:
        path: "{{ playbook_dir }}/workdir/{{env_authorized_key}}.pub"
        privatekey_path: "{{ playbook_dir }}/workdir/{{env_authorized_key}}.pem"
        state: present

# Cloudformation template should tag all hosts with Project:{{ env_type }}-{{ guid }}
- name: Step 004 Deploy Software
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  serial: 5
  become: true
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - common_tasks
  roles:
    -  { role: common, when: "{{ install_common }}" }

- name: Configuring Bastion Hosts
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  roles:
    -  { role: bastion, when: "{{ install_bastion }}" }
  tags:
    - step004
    - bastion_tasks

- include: "{{ playbook_dir }}/software_playbooks/{{ software_to_deploy }}.yml"
  tags:
    - step004
    - deploy_software

################################################################################
################################################################################
############ Step 005 Post Software Deploy Tasks
################################################################################
################################################################################

- include: "{{ playbook_dir }}/configs/{{ env_type }}/post_software.yml"
  tags:
    - step005
    - post_software
    - post_software_tasks
