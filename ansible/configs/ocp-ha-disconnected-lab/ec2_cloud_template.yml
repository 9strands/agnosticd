---
AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  RegionMapping:
    us-east-1:
      RHELAMI: ami-c998b6b2
    us-east-2:
      RHELAMI: ami-cfdafaaa
    us-west-1:
      RHELAMI: ami-66eec506d
    us-west-2:
      RHELAMI: ami-9fa343e7
    eu-west-1:
      RHELAMI: ami-bb9a6bc2
    eu-central-1:
      RHELAMI: ami-d74be5b8
    ap-northeast-1:
      RHELAMI: ami-30ef0556
    ap-northeast-2:
      RHELAMI: ami-0f5a8361
    ap-southeast-1:
      RHELAMI: ami-10bb2373
    ap-southeast-2:
      RHELAMI: ami-ccecf5af
    sa-east-1:
      RHELAMI: ami-a789ffcb
    ap-south-1:
      RHELAMI: ami-cdbdd7a2
  DNSMapping:
    us-east-1:
      domain: "us-east-1.compute.internal"
    us-west-1:
      domain: "us-west-1.compute.internal"
    us-west-2:
      domain: "us-west-2.compute.internal"
    eu-west-1:
      domain: "eu-west-1.compute.internal"
    eu-central-1:
      domain: "eu-central-1.compute.internal"
    ap-northeast-1:
      domain: "ap-northeast-1.compute.internal"
    ap-northeast-2:
      domain: "ap-northeast-2.compute.internal"
    ap-southeast-1:
      domain: "ap-southeast-1.compute.internal"
    ap-southeast-2:
      domain: "ap-southeast-2.compute.internal"
    sa-east-1:
      domain: "sa-east-1.compute.internal"
    ap-south-1:
      domain: "ap-south-1.compute.internal"

Resources:
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "192.168.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: "prakhar-test.example.opentlc.com"
        - Key: Hostlication
          Value:
            Ref: "AWS::StackId"

  VpcInternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VpcGA:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId:
        Ref: VpcInternetGateway
      VpcId:
        Ref: Vpc

  VpcRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: Vpc

  VPCRouteInternetGateway:
    DependsOn: VpcGA
    Type: "AWS::EC2::Route"
    Properties:
      GatewayId:
        Ref: VpcInternetGateway
      DestinationCidrBlock: "0.0.0.0/0"
      RouteTableId:
        Ref: VpcRouteTable

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    DependsOn:
      - Vpc
    Properties:
      CidrBlock: "192.168.2.0/24"
      Tags:
        - Key: Name
          Value: "ocp-ha-lab-prakhar-test"
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    DependsOn:
      - Vpc
    Properties:
      CidrBlock: "192.168.1.0/24"
      Tags:
        - Key: Name
          Value: "ocp-ha-lab-prakhar-test"
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc

  PublicSubnetRTA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: VpcRouteTable
      SubnetId:
        Ref: PublicSubnet

  MasterSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Host
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: "MasterSG"
  NodeSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Host
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: "NodeSG"

  MasterSGDNS TCP:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
     GroupId:
      Fn::GetAtt:
        - "MasterSG"
        - GroupId
     IpProtocol: "tcp"
        FromPort: "53"
        ToPort: "53"
        CidrIp: "0.0.0.0/0"
  MasterSGDNS UDP:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
     GroupId:
      Fn::GetAtt:
        - "MasterSG"
        - GroupId
     IpProtocol: "udp"
        FromPort: "53"
        ToPort: "53"
        CidrIp: "0.0.0.0/0"
  MasterSGSDN:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
     GroupId:
      Fn::GetAtt:
        - "MasterSG"
        - GroupId
     IpProtocol: "udp"
        FromPort: "4789"
        ToPort: "4789"
        CidrIp: "0.0.0.0/0"
  MasterSGHTTPS Access:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
     GroupId:
      Fn::GetAtt:
        - "MasterSG"
        - GroupId
     IpProtocol: "tcp"
        FromPort: "443"
        ToPort: "443"
        CidrIp: "0.0.0.0/0"
  NodeSGKubelet:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
     GroupId:
      Fn::GetAtt:
        - "NodeSG"
        - GroupId
     IpProtocol: "tcp"
        FromPort: "10250"
        ToPort: "10250"
        CidrIp: "0.0.0.0/0"
  NodeSGSDN:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
     GroupId:
      Fn::GetAtt:
        - "NodeSG"
        - GroupId
     IpProtocol: "udp"
        FromPort: "4789"
        ToPort: "4789"
        CidrIp: "0.0.0.0/0"


#   PublicSG:
#     Type: "AWS::EC2::SecurityGroup"
#     Properties:
#       GroupDescription: Host
#       VpcId:
#         Ref: Vpc
#       Tags:
#         - Key: Name
#           Value: host_sg
#
#   HostUDPPorts:
#     Type: "AWS::EC2::SecurityGroupIngress"
#     Properties:
#       GroupId:
#         Fn::GetAtt:
#           - PublicSG
#           - GroupId
#       IpProtocol: udp
#       FromPort: 0
#       ToPort: 65535
#       CidrIp: "0.0.0.0/0"
#
#   HostTCPPorts:
#     Type: "AWS::EC2::SecurityGroupIngress"
#     Properties:
#       GroupId:
#         Fn::GetAtt:
#           - PublicSG
#           - GroupId
#       IpProtocol: tcp
#       FromPort: 0
#       ToPort: 65535
#       CidrIp: "0.0.0.0/0"
#
#   zoneinternalidns:
#     Type: "AWS::Route53::HostedZone"
#     Properties:
#       Name: "prakhar-test.internal."
#       VPCs:
#         - VPCId:
#             Ref: Vpc
#           VPCRegion:
#             Ref: "AWS::Region"
#       HostedZoneConfig:
#         Comment: "Created By ansible agnostic deployer"
#
#   CloudDNS:
#     Type: AWS::Route53::RecordSetGroup
#     DependsOn:
# #       - "infranode1EIP"
# #     Properties:
#       HostedZoneId: "Z3IHLWJZOU9SRT"
#       RecordSets:
#         - Name: "*.apps.prakhar-test.example.opentlc.com."
#           Type: A
#           TTL: 900
#           ResourceRecords:
# #             - Fn::GetAtt:
#                 - infranode1
#                 - PublicIp
# #
# # #
# #   bastion1:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.small"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: bastion
#         - Key: internaldns
#           Value: bastion.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "bastion"
# #         - Key: AnsibleGroup
#           Value: bastions
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 20
# #
#   bastion1InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "bastion.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - bastion1
#             - PrivateIp
#
# #   bastion1EIP:
#     Type: "AWS::EC2::EIP"
#     DependsOn:
#     - VpcGA
#     Properties:
#       InstanceId:
#         Ref: bastion1
#
#   bastion1PublicDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     DependsOn:
#       - bastion1EIP
#     Properties:
#       HostedZoneId: Z3IHLWJZOU9SRT
#       RecordSets:
# #           - Name: "bastion.prakhar-test.example.opentlc.com."
# #             Type: A
#             TTL: 10
#             ResourceRecords:
#             - "Fn::GetAtt":
#               - bastion1
#               - PublicIp
# # # # #   loadbalancerDNSLoadBalancer:
#     Type: "AWS::Route53::RecordSetGroup"
#     DependsOn:
# #       - loadbalancer1EIP
# #     Properties:
#       HostedZoneId: Z3IHLWJZOU9SRT
#       RecordSets:
#       - Name: "loadbalancer.prakhar-test.example.opentlc.com."
#         Type: A
#         TTL: 900
#         ResourceRecords:
# #           - "Fn::GetAtt":
#             - loadbalancer1
#             - PublicIp
# # #
# #   loadbalancer1:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.small"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: loadbalancer1
#         - Key: internaldns
#           Value: loadbalancer1.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "loadbalancer"
# #         - Key: AnsibleGroup
#           Value: loadbalancers
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 20
# #
#   loadbalancer1InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "loadbalancer1.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - loadbalancer1
#             - PrivateIp
#
# #   loadbalancer1EIP:
#     Type: "AWS::EC2::EIP"
#     DependsOn:
#     - VpcGA
#     Properties:
#       InstanceId:
#         Ref: loadbalancer1
#
#   loadbalancer1PublicDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     DependsOn:
#       - loadbalancer1EIP
#     Properties:
#       HostedZoneId: Z3IHLWJZOU9SRT
#       RecordSets:
# #           - Name: "loadbalancer1.prakhar-test.example.opentlc.com."
# #             Type: A
#             TTL: 10
#             ResourceRecords:
#             - "Fn::GetAtt":
#               - loadbalancer1
#               - PublicIp
# # # # #
# #   master1:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.large"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: master1
#         - Key: internaldns
#           Value: master1.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "master"
# #         - Key: AnsibleGroup
#           Value: masters
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 50
# #         - DeviceName: "/dev/xvdb"
#           Ebs:
#             VolumeType: "gp2"
#             VolumeSize: "20"
# #
#   master1InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "master1.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - master1
#             - PrivateIp
#
# # # # #
# #   node1:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.large"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: node1
#         - Key: internaldns
#           Value: node1.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "node"
# #         - Key: AnsibleGroup
#           Value: nodes
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 50
# #         - DeviceName: "/dev/xvdb"
#           Ebs:
#             VolumeType: "gp2"
#             VolumeSize: "100"
# #
#   node1InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "node1.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - node1
#             - PrivateIp
#
# # #   node2:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.large"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: node2
#         - Key: internaldns
#           Value: node2.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "node"
# #         - Key: AnsibleGroup
#           Value: nodes
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 50
# #         - DeviceName: "/dev/xvdb"
#           Ebs:
#             VolumeType: "gp2"
#             VolumeSize: "100"
# #
#   node2InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "node2.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - node2
#             - PrivateIp
#
# # # # #   infranodeDNSLoadBalancer:
#     Type: "AWS::Route53::RecordSetGroup"
#     DependsOn:
# #       - infranode1EIP
# #     Properties:
#       HostedZoneId: Z3IHLWJZOU9SRT
#       RecordSets:
#       - Name: "infranode.prakhar-test.example.opentlc.com."
#         Type: A
#         TTL: 900
#         ResourceRecords:
# #           - "Fn::GetAtt":
#             - infranode1
#             - PublicIp
# # #
# #   infranode1:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.large"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: infranode1
#         - Key: internaldns
#           Value: infranode1.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "infranode"
# #         - Key: AnsibleGroup
#           Value: infranodes
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 50
# #         - DeviceName: "/dev/xvdb"
#           Ebs:
#             VolumeType: "gp2"
#             VolumeSize: "50"
# #
#   infranode1InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "infranode1.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - infranode1
#             - PrivateIp
#
# #   infranode1EIP:
#     Type: "AWS::EC2::EIP"
#     DependsOn:
#     - VpcGA
#     Properties:
#       InstanceId:
#         Ref: infranode1
#
#   infranode1PublicDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     DependsOn:
#       - infranode1EIP
#     Properties:
#       HostedZoneId: Z3IHLWJZOU9SRT
#       RecordSets:
# #           - Name: "infranode1.prakhar-test.example.opentlc.com."
# #             Type: A
#             TTL: 10
#             ResourceRecords:
#             - "Fn::GetAtt":
#               - infranode1
#               - PublicIp
# # # # #
# #   support1:
#     Type: "AWS::EC2::Instance"
#     Properties:
#       ImageId:
#         Fn::FindInMap:
#         - RegionMapping
#         - Ref: AWS::Region
#         - RHELAMI
#       InstanceType: "t2.medium"
#       KeyName: "ocpkey"
# #       SecurityGroupIds:
#         - "Fn::GetAtt":
#           - PublicSG
#           - GroupId
#       SubnetId:
#         Ref: PublicSubnet
#       Tags:
# #         - Key: Name
#           Value: support1
#         - Key: internaldns
#           Value: support1.prakhar-test.internal
# #         - Key: "owner"
#           Value: "unknownuser"
#         - Key: "Project"
#           Value: "ocp-ha-lab-prakhar-test"
#         - Key: "ocp-ha-lab-prakhar-test"
#           Value: "support"
# #         - Key: AnsibleGroup
#           Value: support
# #         - Key: ostype
#           Value: linux
# #       BlockDeviceMappings:
#         - DeviceName: "/dev/sda1"
#           Ebs:
#             VolumeSize: 20
# #         - DeviceName: "/dev/xvdb"
#           Ebs:
#             VolumeType: "gp2"
#             VolumeSize: "50"
# #
#   support1InternalDNS:
#     Type: "AWS::Route53::RecordSetGroup"
#     Properties:
#       HostedZoneId:
#         Ref: zoneinternalidns
#       RecordSets:
# #       - Name: "support1.prakhar-test.internal."
# #         Type: A
#         TTL: 10
#         ResourceRecords:
#           - "Fn::GetAtt":
#             - support1
#             - PrivateIp
#
# # # #
# Outputs:
#   Route53internalzoneOutput:
#     Description: The ID of the internal route 53 zone
#     Value:
#       Ref: zoneinternalidns
