#vim: set ft=ansible:
---
### Place your "environment configuration" files in a directory under ./ansible/configs/{{env_type}}
### If you want to overwrite *any* values set at the "env" level,
### use --extra-vars or create a "env" directory named "overwrite"

################################################################################
################################################################################
############ Include Environment configuration files and "overwrite" configuration files if present.
################################################################################
################################################################################


- name: Include Environment configuration files and "overwrite" configuration files if present.
  hosts: localhost
  connection: local
  tasks:
    - name: Check for "overwrite" vars
      find:
        paths: "{{playbook_dir}}/configs/overwrite"
        recurse: yes
        file_type: file
      failed_when: no
      changed_when: false
      register: custom_env

    - include_vars:
        dir: "{{playbook_dir}}/configs/{{ env_type }}"
        depth: 1
        files_matching: '.*vars.*yml$'

    - include_vars:
        dir: "{{playbook_dir}}/configs/overwrite"
        depth: 1
        files_matching: '.yml$'
      when: custom_env.matched|int != 0

################################################################################
################################################################################
############ Step 000 Pre Infrastructure Deploy Tasks
################################################################################
################################################################################


- name: Step 000 Pre Infrastructure Deploy Tasks
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step000
    - pre_infra_tasks
  tasks:
    - name: Check for "pre_infra tasks"
      find:
        paths: "{{playbook_dir}}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*pre_infra.*"
        use_regex: true
      failed_when: no
      changed_when: false
      register: pre_infra_tasks

    - include: "{{item.path}}"
      with_items: "{{pre_infra_tasks.files}}"
      when: pre_infra_tasks.matched|int != 0
    - debug:
        var: all
    - debug:
        var: bastions
    - pause:
################################################################################
################################################################################
############ Step 001 Deploy Infrastructure
################################################################################
################################################################################


- name: Step 001 Deploy Infrastructure
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - deloy_infrastructure
  tasks:
    - name: Deploy Infrastucture
      gather_facts: False
      vars_files:
        - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
        - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
      include: "{{playbook_dir}}/cloud_providers/{{cloud_provider}}_infrastructure_deployment.yml"

    # - name: Refresh EC2 cache
    #   command: "{{playbook_dir}}/scripts/ec2.py --refresh-cache"
    # - name: Refresh in-memory EC2 cache
    #   meta: refresh_inventory

- name: Step 001.1 Configure local machine for bastion ssh proxy
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - step001.1
    - deloy_infrastructure
    - configure_local_ssh_proxy
  tasks:

    - name: get bastion Hostname
      set_fact:
        bastion_host: "{{item}}"
      with_items:
        - "{{groups['tag_AnsibleGroup_bastions']}}"
      when: '"{{env_type}}-{{guid}}" in hostvars[item].ec2_tag_Project'
    - name: get bastion Hostname
      debug:
        var: bastion_host

    - name: Added Bastion Proxy to local ~/.ssh/config file
      blockinfile:
        dest: ~/.ssh/config
        marker: "##### {mark} ADDED BASTION PROXY HOST {{hostvars[item]['ec2_public_dns_name']}} {{ env_type }}-{{ guid }} ######"
        content: |
            Host {{hostvars[item]['ec2_public_dns_name']}}
              Hostname {{hostvars[item]['ec2_public_dns_name']}}
              ForwardAgent yes
              IdentityFile ~/.ssh/{{key_name}}.pem
              IdentitiesOnly yes
              User ec2-user
              ControlMaster auto
              ControlPath /tmp/{{ env_type }}
              ControlPersist 5m
              ForwardAgent yes
              StrictHostKeyChecking no
      with_items:
          - "{{groups['tag_AnsibleGroup_bastions']}}"
      when: 'hostvars[item].ec2_tag_Project is defined and "{{env_type}}-{{guid}}" in hostvars[item].ec2_tag_Project'
    - name: Add all hosts to local  ~/.ssh/config file
      blockinfile:
        dest: ~/.ssh/config
        marker: "##### {mark} ADDED Node Proxy Config   {{hostvars[item]['ec2_public_dns_name']}} {{ env_type }}-{{ guid }} ######"
        block: |
            Host {{hostvars[item]['ec2_public_dns_name']}}
              Hostname {{hostvars[item]['ec2_public_dns_name']}}
              User ec2-user
              IdentityFile ~/.ssh/{{key_name}}.pem
              ProxyCommand ssh {{hostvars[bastion_host]['ec2_public_dns_name']}} -W %h:%p
              ForwardAgent yes
              StrictHostKeyChecking no
      with_items:
        - "{{ groups['all'] }}"
      when: 'hostvars[item].ec2_tag_Project is defined and "{{env_type}}-{{guid}}" in hostvars[item].ec2_tag_Project and "bastion" not in hostvars[item].ec2_tag_Name'

###############################################################################
###############################################################################
########### Step 002 Post Infrastructure Deploy Tasks
###############################################################################
###############################################################################


- name: Step 002 Post Infrastructure Deploy Tasks
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step002
    - post_infra_tasks
  tasks:
    - name: Check for "post_infra tasks"
      find:
        paths: "{{playbook_dir}}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*post_infra.*"
        use_regex: true
      failed_when: no
      changed_when: false
      register: post_infra_tasks

    - include: "{{item.path}}"
      with_items: "{{post_infra_tasks.files}}"
      when: post_infra_tasks.matched|int != 0

################################################################################
################################################################################
############ Step 003 Pre Software Deploy Tasks
################################################################################
################################################################################

- name: Step 003 Pre Software Deploy Tasks
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step003
    - pre_software_tasks
  tasks:
    - name: Check for "pre_software tasks"
      find:
        paths: "{{playbook_dir}}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*pre_software.*"
        use_regex: true
      failed_when: no
      changed_when: false
      register: pre_software_tasks

    - include: "{{item.path}}"
      with_items: "{{pre_software_tasks.files}}"
      when: pre_software_tasks.matched|int != 0





################################################################################
################################################################################
############ Step 004 Software Deploy Tasks
################################################################################
################################################################################

- name: Step 004 Deploy Software
  hosts: "{{env_groups['limit']}}"
  become: yes
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step004
    - deploy_software
    - common_tasks
  roles:
    - common


- name: Configuring Bastion Hosts
#  hosts: tag_AnsibleGroup_bastions:&{{mitzi_tag}}
#  hosts: "{{env_groups['limit']}}:&{{env_groups['bastions']}}"
  hosts: "{{bastions}}"
  become: yes
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  roles:
    - bastion
  tags:
    - step004
    - deploy_software
    - bastion_tasks

- name: Configuring Nfs Host
  hosts: "{{nfs}}"
  become: yes
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
  roles:
    -  { role: nfs, when: "{{ install_nfs }}" }
  tags:
    - nfs_tasks



################################################################################
################################################################################
############ Step 005 Post Software Deploy Tasks
################################################################################
################################################################################

- name: Step 005 Post Software Deploy Tasks
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{playbook_dir}}/configs/{{ env_type }}/env_vars.yml"
    - "{{playbook_dir}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step003
    - post_software_tasks
  tasks:
    - name: Check for "pre_software tasks"
      find:
        paths: "{{playbook_dir}}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*post_software.*"
        use_regex: true
      failed_when: no
      changed_when: false
      register: post_software_tasks

    - include: "{{item.path}}"
      with_items: "{{post_software_tasks.files}}"
      when: post_software_tasks.matched|int != 0
