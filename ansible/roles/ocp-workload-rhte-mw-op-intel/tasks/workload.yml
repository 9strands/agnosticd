---
- name: define ocp_project
  set_fact:
    ocp_project: "{{lab_name}}-{{guid}}"

- name: define user user2_kafka_project
  set_fact:
    user2_kafka_project: "{{ocp_username}}-{{lab_1_name}}"

- name: define user user2_kafka_project_2
  set_fact:
    user2_kafka_project_2: "{{ocp_username}}-{{lab_2_name}}"

- name: "Create project for workload {{lab_1_name}}"
  shell: "oc new-project {{lab_1_name}}"

- name: "Create project for workload {{lab_2_name}}"
  shell: "oc new-project {{lab_2_name}}"

- name: "Label namespace"
  command: "oc label namespace {{lab_1_name}} AAD='{{guid}}'"

- name: Make sure we go back to default project
  shell: "oc project default"

- name: delete temp dir if it exists
  file:
      path: /tmp/{{ocp_project}}
      state: absent
- file:
      path: /tmp/{{ocp_project}}
      state: directory

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ serviceaccount_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ clusteroperator_role_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ clusteroperator_rolebinding_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ kafkabroker_role_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ kafkabroker_rolebinding_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ topicoperator_rolebinding_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ kafka_crd_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ kafkaconnect_crd_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ kafkaconnects2i_crd_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ kafkatopic_crd_yaml }} -n {{lab_1_name}}"

- name: Apply cluster-operator templates
  shell: "oc apply -f {{ clusteroperator_deployment_yaml }} -n {{lab_1_name}}"

- name: Apply Kafka Persistent template
  shell: "oc apply -f {{ kafkapersistent_yaml }} -n {{lab_1_name}}"

- name: Apply Kafka Topic template
  shell: "oc apply -f {{ kafkatopic_yaml }} -n {{lab_1_name}}"

- name: Apply Kafka User template
  shell: "oc apply -f {{ kafkauser_yaml }} -n {{lab_1_name}}"

- name: Apply Hello World template
  shell: "oc apply -f {{ helloword_yaml }} -n {{lab_1_name}}"

- name: Annotate the empty project as requested by user
  shell: "oc annotate namespace {{lab_1_name}} openshift.io/requester={{ocp_username}} --overwrite"

- name: Give ocp_username access to ocp_project; user = {{ocp_username}}
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{lab_1_name}}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete

# #######      lab specific tasks   ############## #

# Components:
#   1) Mongodb (use replica set .... 1 replica is sufficient)
#   2) AMQ Streaming (Kafka with Zookeeper)
#   3) Red Hat's Apache Spark  ( https://radanalytics.io/projects )
#   4) JDG
#   5) Decision Manager (KIE-Server, maybe Decision Central ? )
#   6) other ???

####################################################
