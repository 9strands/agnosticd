---
- name: define ocp_project
  set_fact:
    ocp_project: "order-it-hw-app-{{guid}}"

    #Â Templates come from here: https://raw.githubusercontent.com/jorgemoralespou/ose-sample-apps-layouts

- name: Create project for fsi client onboarding demo
  shell: |
         oc new-project {{ocp_project}} \
         --display-name="Order IT HW" \
         --description="Order IT HW Application"
  ignore_errors: true

- name: "Label namespace"
  command: "oc label namespace {{ocp_project}} AAD='{{guid}}'"

#- name: Set project limit LimitRange
#  shell: "oc create -f /tmp/{{guid}}//limit-range.yaml -n {{ocp_project}}"

- name: Import ImageStreams OpenJDK
  shell: "oc create -f {{openjdk_imagestreams_yml}} -n {{ocp_project}}"

- name: Import ImageStreams PAM
  shell: "oc create -f {{pam_imagestreams_yml}} -n {{ocp_project}}"

- name: Import PAM Authoring template
  shell: "oc create -f {{pam_template_yml}} -n {{ocp_project}}"

- name: Create Secrets Business Central
  shell: oc process -f {{pam_secrets_template_yml}} -p SECRET_NAME=businesscentral-app-secret | oc create -f - -n {{ocp_project}}

- name: Create Secrets KIE-server
  shell: oc process -f {{pam_secrets_template_yml}} -p SECRET_NAME=kieserver-app-secret | oc create -f - -n {{ocp_project}}

- name: Create Service Account Business Central
  shell: oc create serviceaccount businesscentral-service-account - -n {{ocp_project}}

- name: Create Service Account KIE Server
  shell: oc create serviceaccount kieserver-service-account -n {{ocp_project}}

- name: Link secrets and service account Business Central
  shell: oc secrets link --for=mount businesscentral-service-account businesscentral-app-secret -n {{ocp_project}}

- name: Link secrets and service account KIE-server
  shell: oc secrets link --for=mount kieserver-service-account kieserver-app-secret -n {{ocp_project}}

- name: Create ConfigMap Business Central
  shell: oc create configmap rhpam-bc-setup-config-map --from-file=/tmp/{{guid}}/bc-clone-git-repository.sh,/tmp/{{guid}}/provision-properties-static.sh -n {{ocp_project}}

- name: Create PAM7 Authoring environment
  shell: |
          oc new-app --template=rhpam70-authoring \
            -p APPLICATION_NAME="rhpam-dev" \
            -p KIE_ADMIN_USER="adminUser" \
            -p KIE_ADMIN_PWD="test1234!" \
            -p KIE_SERVER_CONTROLLER_USER="controllerUser" \
            -p KIE_SERVER_CONTROLLER_PWD="test1234!" \
            -p KIE_SERVER_USER="executionUser" \
            -p KIE_SERVER_PWD="test1234!" \
            -p BUSINESS_CENTRAL_HTTPS_SECRET="businesscentral-app-secret" \
            -p KIE_SERVER_HTTPS_SECRET="kieserver-app-secret" \
            -p MAVEN_REPO_URL="http://nexus:8081/content/groups/public/" \
            -p MAVEN_REPO_USERNAME="deployment" \
            -p MAVEN_REPO_PASSWORD="deployment123" \
            -p BUSINESS_CENTRAL_MEMORY_LIMIT="2Gi" \
            -p IMAGE_STREAM_NAMESPACE={{ocp_project}} -n {{ocp_project}}

- name: "Add ConfigMap as Volume to Business Central DC"
  shell: oc volume dc/rhpam-dev-rhpamcentr --add --name=config-volume --configmap-name=rhpam-bc-setup-config-map --mount-path=/tmp/config-files

- name: "Add BC deployment hook."
  shell: oc set deployment-hook dc/rhpam-dev-rhpamcentr --post -c rhpam-dev-rhpamcentr -e BC_URL="http://rhpam-dev-rhpamcentr:8080" -v config-volume --failure-policy=abort -- /bin/bash /tmp/config-files/bc-clone-git-repository.sh

#- name: "Create secrets and service accounts"
#  shell: "oc process -f /tmp/{{guid}}/secrets-and-accounts.yaml | oc create -n {{ocp_project}} -f  -"

#- name: "Add policy to service accounts"
#  shell: "oc policy add-role-to-user view system:serviceaccount:{{ocp_project}}:processserver-service-account"

- name: "Create Order IT Hardware App"
  shell: |
          oc new-app java:8~https://github.com/DuncanDoyle/order-it-hw-app \
            -e JAVA_OPTIONS="-Dorg.kie.server.repo=/data -Dorg.jbpm.document.storage=/data/docs -Dspring.profiles.active=openshift-no-controller" \
            -e KIE_MAVEN_REPO_USER=executionUser \
            -e KIE_MAVEN_REPO_PASSWORD=test1234! \
            -e KIE_MAVEN_REPO=http://rhpam-dev-rhpamcentr:8080/business-central/maven2 -n {{ocp_project}}

- name: "Create ConfigMap Order IT Hardware App"
  shell: "oc create configmap order-it-hw-app-config-map --from-file=/tmp/{{guid}}/settings.xml -n {{ocp_project}}"

- name: "Add ConfigMap as Volume to Order IT Hardware App DC"
  shell: "oc volume dc/order-it-hw-app --add -m /opt/jboss/.m2 -t configmap --configmap-name=order-it-hw-app-config-map -n {{ocp_project}}"

- name: "Add Data Persistent Volume"
  shell: "oc volume dc/order-it-hw-app --add --claim-size 100Mi --mount-path /data --name order-it-hw-app-data -n {{ocp_project}}"

- name: "Expose Order IT HW App as service"
  shell: "oc expose service order-it-hw-app -n {{ocp_project}}"



# Need to create second container like this as they use the same base image and that gives errors when OpenShift tries to create the ImageStream for a second time.
# TODO: Try on OpenShift v 3.7
#- name: "Create FSI Backoffice UI"
#  shell: "oc new-app entando-base-image-432:latest~https://github.com/entando/fsi-backoffice-openshift --name fsi-backoffice --strategy=docker --allow-missing-imagestream-tags -n {{ocp_project}}"

#TODO: Double check why this is needed.

#- name: "Expose FSI Backoffice Entando"
#  shell: "oc expose svc fsi-backoffice --name=entando-fsi-backoffice --path=/fsi-backoffice/ -n {{ocp_project}}"

#- name: "Get FSI Customer UI Route"
#  shell: "oc get route entando-fsi-customer | awk 'FNR > 1 {print $2}'"
#  register: oc_get_route_output

#- name: "Set FSI Customer UI Route fact"
#  set_fact:
#    fsi_customer_route: "{{ oc_get_route_output.stdout }}"

#- name: "Create FSI BPM process application"
#  shell: |
#          oc process \
#          -f "/tmp/{{guid}}/client-onboarding-process.yaml" \
#          -p GIT_URI="https://github.com/entando/fsi-onboarding-bpm" \
#          -p GIT_REF="master" \
#          -p ENTANDO_BASE_URL="http://{{fsi_customer_route}}/fsi-customer/" \
#          -n {{ocp_project}} | oc create -f - -n {{ocp_project}}

#- name: "Patch the ImageSteam location"
#  shell: |
#          oc patch bc/co --type="json" \
#          -p="[{'op': 'replace', 'path': '/spec/strategy/sourceStrategy/from/namespace', 'value': '{{ocp_project}}'}]"


#### Wait for the build to complete before slapping on the quota ....
- include_tasks: ./wait_for_build.yml
  static: no
  vars:
    build_to_wait:
      - order-it-hw-app

#### Wait for the deployment to complete before slapping on the quota ...
- include_tasks: ./wait_for_deploy.yml
  static: no
  vars:
    pod_to_wait:
      - order-it-hw-app
      - rhpam-dev-rhpamcentr
      - rhpam-dev-kieserver

#- name: "Start build of BPM Process application"
#  shell: "oc start-build co"

- name: Annotate the completed project as requested by user
  shell: "oc annotate namespace {{ocp_project}} openshift.io/requester={{ocp_username}} --overwrite"

- name: Give user access to the completed project
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{ocp_project}}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
