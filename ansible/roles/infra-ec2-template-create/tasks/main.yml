---
- set_fact:
    cloud_tags_final: "{{ cloud_tags | from_json }}"
  when: cloud_tags is string

- set_fact:
    cloud_tags_final: "{{ cloud_tags | d({}) }}"
  when: cloud_tags is not string

- name: Launch CloudFormation template
  # environment:
  #   AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
  #   AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
  #   AWS_DEFAULT_REGION: "{{aws_region}}"
  cloudformation:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    stack_name: "{{ project_tag }}"
    state: "present"
    region: "{{ aws_region | default(region) | default('us-east-1')}}"
    disable_rollback: true
    template: "{{ANSIBLE_REPO_PATH}}/workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template"
    tags: "{{ cf_tags | combine(cloud_tags_final)}}"
  tags:
    - aws_infrastructure_deployment
    - provision_cf_template
  register: cloudformation_out
  until:
    - cloudformation_out is succeeded
    - cloudformation_out.output in ["Stack CREATE complete", "Stack is already up-to-date."]
  retries: "{{ cloudformation_retries | default(3) }}"
  delay: "{{ cloudformation_retry_delay | default(30) }}"
  ignore_errors: yes

- name: debug cloudformation
  debug:
    var: cloudformation_out
  tags: provision_cf_template
  when: not cloudformation_out is succeeded

- name: report Cloudformation error
  fail:
    msg: "FAIL {{ project_tag }} Create Cloudformation"
  when: not cloudformation_out is succeeded
  tags:
    - provision_cf_template

- name: debug cloudformation
  debug:
    var: cloudformation_out
    verbosity: 2
  tags: provision_cf_template
