# vim: set ft=ansible:
---
#################################################################################
#################################################################################
############# Step 001 Deploy Infrastructure
#################################################################################
#################################################################################
- name: Step 001 Deploy Infrastructure
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - deploy_infrastructure
  tasks:
    - name: Deploy Infrastucture
      include: "{{ playbook_dir }}/cloud_providers/{{ cloud_provider }}_infrastructure_deployment.yml"
      tags: 
        - infrastructure_deployment 

    - name: Refresh cloud_provider cache
      command: "{{ playbook_dir }}/inventory/{{ cloud_provider }}.py --refresh-cache"
      tags: 
        - refresh_inventory 

    - name: Refresh in-memory cloud_provider cache
      meta: refresh_inventory
      tags: 
        - refresh_inventory 

    - name: Store bastion hostname as a fact
      set_fact:
        bastion_hostname: "{{ hostvars[ groups[ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') ].0 ]['ec2_public_dns_name'] }}"
    
    - name: Create empty local ssh config in /tmp
      file:
        dest: "/tmp/{{ env_type }}_{{ guid }}_ssh_conf"
        state: touch

    - name: Add bastion proxy config to /tmp/ ssh config file
      blockinfile:
        dest: "/tmp/{{ env_type }}_{{ guid }}_ssh_conf"
        marker: "##### {mark} ADDED BASTION PROXY HOST {{ env_type }}-{{ guid }} ######"
        content: |
            Host {{ bastion_hostname }}
              Hostname {{ bastion_hostname }}
              ForwardAgent yes
              IdentityFile ~/.ssh/{{ key_name }}.pem
              IdentitiesOnly yes
              User ec2-user
              ControlMaster auto
              ControlPath /tmp/%h-%r
              ControlPersist 5m
              ForwardAgent yes
              StrictHostKeyChecking no
      tags:
        - bastion_proxy_config
        - config_ssh_config_file

    - name: Add all hosts to /tmp/ ssh config file
      blockinfile:
        dest: "/tmp/{{ env_type }}_{{ guid }}_ssh_conf"
        marker: "##### {mark} ADDED Node Proxy Config  {{ item }} {{ env_type }}-{{ guid }} ######"
        block: |
            Host {{ item }}
              Hostname {{ item }}
              User ec2-user
              IdentityFile ~/.ssh/{{ key_name }}.pem
              ProxyCommand ssh {{ bastion_hostname }} -W %h:%p
              ForwardAgent yes
              StrictHostKeyChecking no
      with_items:
        - "{{ groups[('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_')] }}"
      tags:
        - bastion_proxy_config
        - config_ssh_config_file

- name: Readiness and SSH DNS disable
  hosts: 
    - "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  gather_facts: False
  any_errors_fatal: True
  become: True
  tags:
    - common_tasks
    - wait_ssh
  tasks:
    - name: wait for host to be available
      wait_for:
        host: '{{ inventory_hostname }}'
        port: 22
        search_regex: OpenSSH

    - name: Disable SSH DNS lookup
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "#UseDNS yes"
        line: "UseDNS no"
      register: dns_config_changed

    - name: Restart SSHD as needed
      service:
        name: sshd
        state: restarted
      when: dns_config_changed | changed

#################################################################################
#################################################################################
############# Step 002 Post Infrastructure Deploy Tasks
#################################################################################
#################################################################################
- include: "{{ playbook_dir }}/configs/{{ env_type }}/post_infra.yml"
  tags:
    - step002
    - post_infra_tasks
        
#################################################################################
#################################################################################
############## Step 003 Pre Software Deploy Tasks
#################################################################################
#################################################################################
- include: "{{ playbook_dir }}/configs/{{ env_type }}/pre_software.yml"
  tags:
    - step003
    - pre_software_tasks

##################################################################################
##################################################################################
############## Step 004 Software Deploy Tasks
##################################################################################
##################################################################################

# Cloudformation template should tag all hosts with Project:{{ env_type }}-{{ guid }}
- name: Configure subscriptions
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  serial: 1
  any_errors_fatal: true
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - deploy_software
    - subscriptions
  roles:
    - { role: subscriptions, when: "{{ use_subscriptions | default(false) }}" }

- name: Configure repositories
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  any_errors_fatal: true
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - deploy_software
    - repositories
  roles:
    - repositories

- name: Install and configure common software
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - deploy_software
    - common_tasks
  roles:
    -  { role: common, when: "{{ install_common }}" }

- name: Configuring Bastion Hosts
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  roles:
    -  { role: bastion, when: "{{ install_bastion }}" }
  tags:
    - step004
    - deploy_software
    - bastion_tasks

- include: "{{ playbook_dir }}/software_playbooks/{{ software_to_deploy }}.yml"
  tags:
    - step004
    - deploy_software
    - software_to_deploy

################################################################################
################################################################################
############ Step 005 Post Software Deploy Tasks
################################################################################
################################################################################

- include: "{{ playbook_dir }}/configs/{{ env_type }}/post_software.yml"
  tags:
    - step005
    - post_software_tasks
